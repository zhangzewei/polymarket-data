# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ClobReward {
  amount: Float
  currency: String
  tokenId: String
}

input CreateTaskInput {
  description: String!
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Event {
  active: Boolean!
  archived: Boolean!
  closed: Boolean!
  competitive: String!
  createdAt: String!
  creationDate: String!
  description: String!
  endDate: String!
  eventId: String!
  featured: Boolean!
  id: Int!
  liquidity: String!
  markets: [Market!]!
  restricted: Boolean!
  slug: String!
  startDate: String!
  ticker: String!
  title: String!
  updatedAt: String!
  volume: String!
  volume1mo: String!
  volume1wk: String!
  volume1yr: String!
  volume24hr: String!
}

type Market {
  acceptingOrders: Boolean!
  acceptingOrdersTimestamp: String!
  active: Boolean!
  approved: Boolean!
  archived: Boolean!
  automaticallyActive: Boolean!
  bestAsk: String!
  bestBid: String!
  clearBookOnStart: Boolean!
  clobRewards: [ClobReward!]!
  clobTokenIds: [String!]!
  closed: Boolean!
  competitive: String!
  conditionId: String!
  createdAt: String!
  cyom: Boolean!
  deploying: Boolean!
  description: String!
  endDate: String!
  event: Event!
  eventId: String!
  featured: Boolean!
  funded: Boolean!
  groupItemThreshold: String!
  groupItemTitle: String!
  id: Int!
  lastTradePrice: String!
  liquidity: String!
  liquidityClob: String!
  manualActivation: Boolean!
  marketId: String!
  negRisk: Boolean!
  negRiskMarketId: String!
  negRiskOther: Boolean!
  negRiskRequestId: String!
  oneDayPriceChange: String!
  oneHourPriceChange: String!
  oneMonthPriceChange: String!
  oneWeekPriceChange: String!
  outcomePrices: [String!]!
  outcomes: [String!]!
  pagerDutyNotificationEnabled: Boolean!
  pendingDeployment: Boolean!
  priceHistories: [MarketPriceHistory!]!
  question: String!
  questionId: String!
  ready: Boolean!
  restricted: Boolean!
  rewardsMaxSpread: String!
  rewardsMinSize: String!
  showGmpOutcome: Boolean!
  showGmpSeries: Boolean!
  slug: String!
  spread: String!
  startDate: String!
  umaBond: String!
  umaResolutionStatuses: [UmaResolutionStatus!]!
  umaReward: String!
  updatedAt: String!
  volume: String!
  volume1mo: String!
  volume1moClob: String!
  volume1wk: String!
  volume1wkClob: String!
  volume1yr: String!
  volume1yrClob: String!
  volume24hr: String!
  volume24hrClob: String!
  volumeClob: String!
}

type MarketPriceHistory {
  bestAsk: String!
  bestBid: String!
  createdAt: DateTime!
  id: Int!
  market: Market!
  marketId: String!
}

type MarketSummary {
  active: Boolean!
  bestAsk: String!
  bestBid: String!
  groupItemTitle: String!
  outcomePrices: [String!]!
  outcomes: [String!]!
  slug: String!
}

type Mutation {
  createTask(createTaskInput: CreateTaskInput!): Task!
}

type Query {
  activeEvents: [Event!]!
  activeMarketSummaries: [MarketSummary!]!
  event(id: Int!): Event!
  eventByEventId(eventId: String!): Event!
  events: [Event!]!
  marketSummaries: [MarketSummary!]!
  recentEvents(limit: Int! = 10): [Event!]!
  searchEvents(query: String!): [Event!]!
  task(id: Int!): Task!
  tasks: [Task!]!
}

type Task {
  createdAt: DateTime!
  id: Int!
  isRunning: Boolean!
  lastRunTime: DateTime
  name: String!
  nextRunTime: DateTime
  slug: String!
  updatedAt: DateTime!
}

type UmaResolutionStatus {
  outcome: String
  status: String
  timestamp: String
}